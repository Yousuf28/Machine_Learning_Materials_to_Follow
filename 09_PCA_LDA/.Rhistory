library(foreign)
library(gtools)
library(questionr)
install.packages(questionr)
install.packages('questionr')
library(MASS)
install.packages('Rserve')
library(Rserve)
Rserve()
Rserve()
Rserve(args = '--no-save')
Rserve()
Rserve(args = '--no-save')
ls()
Rserve::run.Rserve(args= '--no-save')
Rserve(args = '--no-save')
install.packages('mvoutlier')
library('ggmap')
install.packages('ggmap')
library(ggmap)
library(UsingR)
install.packages('UsingR')
library(UsingR)
data("father.son")
head(father.son)
mean(father.son$sheight)
hist(father.son$sheight)
summary(father.son)
x <- father.son$sheight
n <- length(x)
B <- 100
B <- 5
resample <- sample(x, n*B, replace = TRUE)
dim(resample)
str(resample)
dim(father.son)
n
B <- 10
resample <- sample(x, n*B, replace = TRUE)
str(resample)
resample <- matrix(sample(x, n*B, replace = TRUE, B,n))
resample <- matrix(sample(x, n*B, replace = TRUE), B,n)
dim(resample)
str(resample)
head(resample)
resample[1,2]
resample[1:3,2:4]
resample[1:10,1:20]
medians <- apply(resample, 1, median)
medians
median(father.son$sheight)
mean(medians)
quantile(medians, c(0.025, 0.975))
hist(medians)
B <- 10000
resample <- matrix(sample(x, n*B, replace = TRUE), B,n)
medians <- apply(resample, 1, median)
median(father.son$sheight)
mean(medians)
quantile(medians, c(0.025, 0.975))
hist(medians)
for (i in 1:10){}
for (i in 1:10){}
for (i in 1:10){print(exp^i)}
for (i in seq(1:10)){print(exp^i)}
for (i in seq(1:10)){print(exp(i))}
ex <- for (i in seq(1:10)){print(exp(i))}
hist(ex)
as.list(ex)
hist(ex)
barplot(ex)
as.matrix(ex)
unlist(ex)
barplot(ex)
ex
ex <-as.list(for (i in seq(1:10)){print(exp(i))})
barplot(ex)
str(ex)
plot(ex)
barplot(ex)
vec <- as.vector(ex)
vec
str(vec)
vec
ex <-(for (i in seq(1:10)){print(exp(i))})
ey <- seq(1:10)
plot(ex,ey)
ey
ex[8]
x <- c(2.718282,
7.389056,
20.08554,
54.59815,
148.4132,
403.4288,
1096.633,
2980.958,
8103.084,
22026.47)
y <- 1:10
plot(x,y)
plot(y,x)
abline()
scatter.plot(y,x)
abline(x,y)
install.packages('nlme')
library(nlme)
data("Oats")
str(Oats)
head(Oats)
View(Oats)
plot(Oats)
library(tidyverse)
ggplot(data = Oats, aes(x = nitro, y = yield, fill = Variety))+
geom_point()
ggplot(data = Oats, aes(x = nitro, y = yield,color = Variety))+
geom_point()
Oats %>% group_by(Variety) %>%
ggplot(data = Oats, aes(x = nitro, y = yield,color = Variety))+
geom_point()
Oats %>% group_by(Variety) %>%
ggplot(data = Oats, aes(x = nitro, y = yield))+
geom_point()
Oats %>% group_by(Variety) %>%
ggplot(data = Oats, aes(x = nitro, y = yield))+
geom_point()
Oats %>%Oats %>%  group_by(Variety) %>%
ggplot(data = Oats, aes(x = nitro, y = yield))+
geom_point()
Oats %>% group_by(Block) %>%
ggplot(data = Oats, aes(x = nitro, y = yield))+
geom_point()
Oats %>% group_by(Block) %>%
ggplot( aes(x = nitro, y = yield))+
geom_point()
Oats %>% group_by(Block) %>%
ggplot( aes(x = nitro, y = yield, color = Block))+
geom_point()
Oats %>%
ggplot( aes(x = nitro, y = yield, color = Block, fill = Block))+
geom_point()
ggplot( aes(x = nitro, y = yield, color = Block))+
geom_point()
ggplot(data =Oats aes(x = nitro, y = yield, color = Block))+
geom_point()
ggplot(data =Oats aes(x = nitro, y = yield, color = Block))+
geom_point()
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth(method='lm')
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_smooth(method='lm')
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth(method='lm')
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth(method='gam')
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth(method='lm')
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth(method='loess')
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth(se = FALSE, method = "gam", formula = y ~ s(log(x)))
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth( method = "gam")
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth( method = "lm")
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth( se = FALSE, method = "lm")
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth( se = FALSE, method = "lm", y~ log(x))
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth( se = FALSE, method = "lm", formula =  y ~ log(x))
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth( se = FALSE, method = "lm", formula =  y ~ log(x+1))
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth( se = FALSE, method = "lm", formula =  y ~ s(log(x+1)))
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_smooth( se = FALSE, method = "lm", formula =  y ~ (log(x+1)))
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_abline()
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_abline(x,y)
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_jitter()+
geom_line()
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_line()
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_line()+
facet_grid(yield~nitro)
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point()+
geom_line()+
facet_grid()
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_point(group = Block)+
geom_line()+
facet_grid()
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_line()
Oats %>% group_by(Block) %>%
ggplot(data =Oats ,aes(x = nitro, y = yield, color = Block))+
geom_line()
Oats %>% group_by(Block) %>%
ggplot(aes(x = nitro, y = yield, color = Block))+
geom_line()
plot(Oats)
model1 <- lm(yield~Variety*nitro, data = Oats)
summary(model1)
knitr::opts_chunk$set(echo = TRUE)
library(nlme)
data("Oats")
str(Oats)
head(Oats)
plot(Oats)
model1 <- lm(yield~Variety*nitro, data = Oats)
model2 <- lme(yield~Variety*nitro,data=Oats,random=~1|Block/Variety)
summary(model2)
coef(model1)
coef(model2)
plot(ranef(model2))
plot(model2)
13+98
p = 13+98
13/p
1-(13/p)^2-(98/p)^2
q=24+29
1-(24/q)^2-(29/q)^2
r = 111+53
(111/r)*.2068 + (53/r)*.4955
setwd("~/Documents/My_exercise code for machine learning/PCA")
data("iris")
nd <- sample(2, nrow(iris),
replace = TRUE,
prob = c(0.8, 0.2))
training <- iris[ind==1,]
testing <- iris[ind==2,]
ind <- sample(2, nrow(iris),
replace = TRUE,
prob = c(0.8, 0.2))
training <- iris[ind==1,]
testing <- iris[ind==2,]
pc <- prcomp(training[,-5],
center = TRUE,
scale. = TRUE)
library(ggbiplot)
g <- ggbiplot(pc,
obs.scale = 1,
var.scale = 1,
groups = training$Species,
ellipse = TRUE,
circle = TRUE,
ellipse.prob = 0.68)
g <- g + scale_color_discrete(name = '')
g <- g + theme(legend.direction = 'horizontal',
legend.position = 'top')
print(g)
library(datasets)
library(datasets)
head(iris)
library(ggplot2)
ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
set.seed(20)
irisCluster <- kmeans(iris[, 3:4], 3, nstart = 20)
irisCluster
irisCluster$cluster <- as.factor(irisCluster$cluster)
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$cluster)) + geom_point()
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$cluster)) + geom_point()
library(datasets)
head(iris)
library(ggplot2)
ggplot(iris, aes(Petal.Length, Petal.Width, color = Species)) + geom_point()
#
set.seed(20)
irisCluster <- kmeans(iris[, 3:4], 3, nstart = 20)
irisCluster
##
irisCluster$cluster <- as.factor(irisCluster$cluster)
ggplot(iris, aes(Petal.Length, Petal.Width, color = iris$cluster)) + geom_point()
library(ggplot2)
cars <- mtcars
cars$cyl <- factor(cars$cyl, labels =
c('Four cylinder', 'Six cylinder', 'Eight cylinder'))
features <- c('wt', 'qsec')
n_clusters <- 3
car_clusters <- kmeans(cars[, features], n_clusters, nstart = 30)
cars$cluster <- factor(car_clusters$cluster)
centroids <- data.frame(cluster = factor(seq(1:n_clusters)),
wt = car_clusters$centers[,'wt'],
qsec = car_clusters$centers[,'qsec'])
# cross tab of cylinder by cluster
print(table(cars$cluster, cars$cyl))
g <- ggplot() +
geom_point(data = cars,
aes(x = wt,
y = qsec,
color = cluster),
size = 3) +
geom_text(data = cars,
aes(x = wt,
y = qsec,
label = row.names(cars),
color = cluster),
nudge_y = .2,
check_overlap = TRUE) +
geom_point(data = centroids,
mapping = aes(x = wt,
y = qsec,
color = cluster),
size = 20,
pch = 13)
print(g)
library(ggplot2)
cars <- mtcars
cars$cyl <- factor(cars$cyl, labels =
c('Four cylinder', 'Six cylinder', 'Eight cylinder'))
features <- c('wt', 'qsec')
n_clusters <- 3
car_clusters <- kmeans(cars[, features], n_clusters, nstart = 30)
cars$cluster <- factor(car_clusters$cluster)
centroids <- data.frame(cluster = factor(seq(1:n_clusters)),
wt = car_clusters$centers[,'wt'],
qsec = car_clusters$centers[,'qsec'])
# cross tab of cylinder by cluster
print(table(cars$cluster, cars$cyl))
g <- ggplot() +
geom_point(data = cars,
aes(x = wt,
y = qsec,
color = cluster),
size = 3) +
geom_text(data = cars,
aes(x = wt,
y = qsec,
label = row.names(cars),
color = cluster),
nudge_y = .2,
check_overlap = TRUE) +
geom_point(data = centroids,
mapping = aes(x = wt,
y = qsec,
color = cluster),
size = 20,
pch = 13)
print(g)
